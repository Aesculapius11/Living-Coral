---
layout: layouts/base.njk
---

<article class="max-w-3xl mx-auto px-4">
  <header class="mb-8">
    {% if cover %}
    <div class="h-56 md:h-72 w-full rounded-2xl overflow-hidden shadow-soft mb-6">
      <img src="{{ cover }}" alt="{{ title }}" class="w-full h-full object-cover"/>
    </div>
    {% endif %}
    <h1 class="text-3xl md:text-4xl font-bold mb-3" data-aos="fade-up">{{ title }}</h1>
    <div class="flex flex-wrap items-center gap-3 text-sm text-neutral-500 dark:text-neutral-400" data-aos="fade-up" data-aos-delay="50">
      <span>{{ date | readableDate }}</span>
      {% if category %}<a href="/categories/{{ category | url }}/" class="px-2 py-0.5 rounded bg-livingCoral/10 text-livingCoral">{{ category }}</a>{% endif %}
      {% if tags %}
        <div class="flex items-center gap-2">
          {% for tag in tags %}
            <a href="/tags/{{ tag | url }}/" class="hover:text-livingCoral">#{{ tag }}</a>
          {% endfor %}
        </div>
      {% endif %}
    </div>
  </header>

  <div class="prose prose-neutral dark:prose-invert max-w-none" data-aos="fade-up" data-aos-delay="100">
    {{ content | safe }}
  </div>

  <section class="mt-12" data-aos="fade-up" data-aos-delay="150">
    <h2 class="text-xl font-semibold mb-4">相关文章</h2>
    <div class="grid gap-4 md:grid-cols-3">
      {# Nunjucks 无 selectattr/rejectattr，这里手动筛选 #}
      {% set count = 0 %}
      {% for p in collections.posts %}
        {% if p.url != page.url and count < 3 %}
          {% set show = false %}
          {% if tags and p.data.tags %}
            {% for t in tags %}
              {% if p.data.tags.indexOf(t) > -1 %}{% set show = true %}{% endif %}
            {% endfor %}
          {% endif %}
          {% if show %}
            <a href="{{ p.url }}" class="block p-4 rounded-xl border border-black/5 dark:border-white/10 hover:border-livingCoral transition" title="{{ p.data.title }}">
              <p class="text-sm text-neutral-500 dark:text-neutral-400">{{ p.date | readableDate }}</p>
              <p class="mt-1 font-medium">{{ p.data.title }}</p>
            </a>
            {% set count = count + 1 %}
          {% endif %}
        {% endif %}
      {% endfor %}
      {% if count == 0 %}
        {% set fallback = 0 %}
        {% for p in collections.posts %}
          {% if p.url != page.url and fallback < 3 %}
            <a href="{{ p.url }}" class="block p-4 rounded-xl border border-black/5 dark:border-white/10 hover:border-livingCoral transition" title="{{ p.data.title }}">
              <p class="text-sm text-neutral-500 dark:text-neutral-400">{{ p.date | readableDate }}</p>
              <p class="mt-1 font-medium">{{ p.data.title }}</p>
            </a>
            {% set fallback = fallback + 1 %}
          {% endif %}
        {% endfor %}
      {% endif %}
    </div>
  </section>

  <section class="mt-12 p-6 rounded-2xl bg-black/[0.03] dark:bg-white/[0.03]" data-aos="fade-up" data-aos-delay="200">
    <div class="flex items-center gap-4">
      <img src="{{ site.author.avatar }}" alt="avatar" class="w-14 h-14 rounded-full object-cover" />
      <div>
        <p class="font-semibold">{{ site.author.name }}</p>
        <p class="text-sm text-neutral-500 dark:text-neutral-400">{{ site.author.bio }}</p>
      </div>
    </div>
  </section>

    <section class="mt-12 p-6 rounded-2xl bg-black/[0.03] dark:bg-white/[0.03]" data-aos="fade-up" data-aos-delay="200">
       <div id="giscus-container"></div>
                        <script>
          // 动态重新加载 Giscus 以切换主题
          function reloadGiscusWithTheme() {
            const isDark = document.documentElement.classList.contains('dark');
            const theme = isDark ? 'dark' : 'light';
            
            // console.log('Reloading Giscus with theme:', theme);
            
            // 清空容器
            const container = document.getElementById('giscus-container');
            container.innerHTML = '';
            
            // 创建新的 script 标签
            const script = document.createElement('script');
            script.src = 'https://giscus.app/client.js';
            script.setAttribute('data-repo', 'shadowjade-studio/discussion');
            script.setAttribute('data-repo-id', 'R_kgDOPX_60w');
            script.setAttribute('data-category', 'Announcements');
            script.setAttribute('data-category-id', 'DIC_kwDOPX_6084Ctwnj');
            script.setAttribute('data-mapping', 'pathname');
            script.setAttribute('data-strict', '0');
            script.setAttribute('data-reactions-enabled', '1');
            script.setAttribute('data-emit-metadata', '0');
            script.setAttribute('data-input-position', 'top');
            script.setAttribute('data-theme', theme);
            script.setAttribute('data-lang', 'zh-CN');
            script.setAttribute('data-loading', 'lazy');
            script.setAttribute('crossorigin', 'anonymous');
            script.async = true;
            
            container.appendChild(script);
          }

          // 监听主题变化
          function setupThemeObserver() {
            const observer = new MutationObserver((mutations) => {
              mutations.forEach((mutation) => {
                if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
                  // console.log('Theme change detected, reloading Giscus...');
                  // 延迟执行，确保 DOM 更新完成
                  setTimeout(reloadGiscusWithTheme, 300);
                }
              });
            });

            observer.observe(document.documentElement, {
              attributes: true,
              attributeFilter: ['class']
            });
            
            // console.log('Theme observer setup complete');
          }

          // 初始化 Giscus
          function loadGiscus() {
            const script = document.createElement('script');
            script.src = 'https://giscus.app/client.js';
            script.setAttribute('data-repo', 'shadowjade-studio/discussion');
            script.setAttribute('data-repo-id', 'R_kgDOPX_60w');
            script.setAttribute('data-category', 'Announcements');
            script.setAttribute('data-category-id', 'DIC_kwDOPX_6084Ctwnj');
            script.setAttribute('data-mapping', 'pathname');
            script.setAttribute('data-strict', '0');
            script.setAttribute('data-reactions-enabled', '1');
            script.setAttribute('data-emit-metadata', '0');
            script.setAttribute('data-input-position', 'top');
            // 初始主题根据当前网站状态设置
            script.setAttribute('data-theme', document.documentElement.classList.contains('dark') ? 'dark' : 'light');
            script.setAttribute('data-lang', 'zh-CN');
            script.setAttribute('data-loading', 'lazy');
            script.setAttribute('crossorigin', 'anonymous');
            script.async = true;
            
            // 当 Giscus 加载完成后，设置主题观察器
            script.onload = () => {
              // console.log('Giscus script loaded successfully');
              // 设置主题观察器
              setupThemeObserver();
            };
            
            script.onerror = () => {
              // console.error('Failed to load Giscus script');
            };
            
            document.getElementById('giscus-container').appendChild(script);
          }

          // 页面加载完成后初始化 Giscus
          if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', loadGiscus);
          } else {
            loadGiscus();
          }
          
          // 额外的主题切换监听器（备用方案）
          document.addEventListener('DOMContentLoaded', () => {
            // 监听主题切换按钮的点击事件
            const themeToggle = document.getElementById('themeToggle');
            if (themeToggle) {
              themeToggle.addEventListener('click', () => {
                // console.log('Theme toggle clicked, reloading Giscus...');
                setTimeout(reloadGiscusWithTheme, 300);
              });
            }
          });
        </script>
   </section>


</article>



